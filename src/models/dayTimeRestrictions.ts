/**
 * Shell Card Management APIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { boolean, nullable, object, optional, Schema, string } from '../schema';

/**
 * Day/time restrictions such as weekdays and time range to be applied on the bundle.
 * Mandatory if respective action is set as “Add”.
 * The details of DayTimeRestriction entity is given below.
 */
export interface DayTimeRestrictions {
  /**
   * True/False.
   * True if card could be used on a Friday, else false.
   * Default value: false.
   */
  friday?: boolean;
  /**
   * True/False.
   * True if card could be used on a Monday, else false.
   * Default value: false.
   */
  monday?: boolean;
  /**
   * True/False.
   * True if card could be used on a Saturday, else false.
   * Default value: false.
   */
  saturday?: boolean;
  /**
   * True/False.
   * True if card could be used on a Sunday, else false.
   * Default value: false.
   */
  sunday?: boolean;
  /**
   * True/False.
   * True if card could be used on a Thursday, else false.
   * Default value: false.
   */
  thursday?: boolean;
  /**
   * Card could be used from this time in a day.
   * Mandatory if TimeTo is passed, else optional.
   * Format: HH:mm (24-hour format)
   * Note:
   * 2.	“00:00” is the lowest time value and “23:59” is the highest time value.
   * To allow card to be used throughout the day pass null in TimeFrom and TimeTo.
   */
  timeFrom?: string | null;
  /**
   * Card could be used up to this time in a day.
   * Mandatory if TimeFrom is passed, else optional.
   * Format: HH:mm (24-hour format)
   * Note:
   * 2.	“00:00” is the lowest time value and “23:59” is the highest time value.
   * To allow card to be used throughout the day pass null in TimeFrom and TimeTo.
   */
  timeTo?: string | null;
  /**
   * True/False.
   * True if card could be used on a Tuesday, else false.
   * Default value: false.
   */
  tuesday?: boolean;
  /**
   * True/False.
   * True if card could be used on a Wednesday, else false.
   * Default value: false.
   */
  wednesday?: boolean;
}

export const dayTimeRestrictionsSchema: Schema<DayTimeRestrictions> = object({
  friday: ['Friday', optional(boolean())],
  monday: ['Monday', optional(boolean())],
  saturday: ['Saturday', optional(boolean())],
  sunday: ['Sunday', optional(boolean())],
  thursday: ['Thursday', optional(boolean())],
  timeFrom: ['TimeFrom', optional(nullable(string()))],
  timeTo: ['TimeTo', optional(nullable(string()))],
  tuesday: ['Tuesday', optional(boolean())],
  wednesday: ['Wednesday', optional(boolean())],
});
