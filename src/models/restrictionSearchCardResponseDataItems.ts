/**
 * Shell Card Management APIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  boolean,
  lazy,
  nullable,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import {
  SearchCardResponseRestrictions,
  searchCardResponseRestrictionsSchema,
} from './searchCardResponseRestrictions';

export interface RestrictionSearchCardResponseDataItems {
  /** Bundle Id associated with card */
  bundleId?: number;
  restrictions?: SearchCardResponseRestrictions;
  /** ISO currency code of the country. */
  restrictionCurrencyCode?: string | null;
  /** Currency symbol of the country. */
  restrictionCurrencySymbol?: string | null;
  /** Account ID */
  accountId?: number | null;
  /** Account Name */
  accountName?: string | null;
  /** Account Number */
  accountNumber?: string | null;
  /** AccountShortName */
  accountShortName?: string | null;
  /** Unique Card */
  cardId?: number | null;
  /** ISO code of the card i.e. first 7 digits of the PAN */
  cardTypeCode?: string | null;
  /**
   * Card Type ID
   * Example Id & Description:
   * 1 - Philippines CRT 7077861
   * 2- Philippines Fleet 7002861
   * 5-SHELL FLEET- HONG KONG 7002821
   * 6-SHELL NHF- HONG KONG 7002821
   * 7-SHELL CRT- HONG KONG 7077821
   */
  cardTypeId?: number | null;
  /**
   * Card Type Name
   * Example Id & Description:
   * 1 - Philippines CRT 7077861
   * 2- Philippines Fleet 7002861
   * 5-SHELL FLEET- HONG KONG 7002821
   * 6-SHELL NHF- HONG KONG 7002821
   * 7-SHELL CRT- HONG KONG 7077821
   */
  cardTypeName?: string | null;
  /** ISO currency code of the country */
  colCoCurrencyCode?: string | null;
  /** Currency symbol of the country */
  colCoCurrencySymbol?: string | null;
  /** ISO currency code of the Customer Currency */
  currencyCode?: string | null;
  /** Currency symbol of the Customer Currency Code */
  currencySymbol?: string | null;
  /** Driver name */
  driverName?: string | null;
  /**
   * Expiry date of the card
   * Format: yyyyMMdd
   */
  expiryDate?: string | null;
  /** True if it is a CRT type card, else false */
  isCRT?: boolean;
  /** True if it is a Fleet type card, else false */
  isFleet?: boolean;
  /** True if it is an international card, else false */
  isInternational?: boolean;
  /** True if it is a national card, else false */
  isNational?: boolean;
  /** True if it is allowed at all partner sites, else false */
  isPartnerSitesIncluded?: boolean;
  /** True if it is only allowed at Shell sites, else false */
  isShellSitesOnly?: boolean;
  /**
   * Issue date
   * Format: yyyyMMdd
   */
  issueDate?: string | null;
  /** Issue Number */
  issueNumber?: number | null;
  /** True if a new card is issued with the same PAN, else false */
  isSuperseded?: boolean;
  /** True if it is a virtual card, else false */
  isVirtualCard?: boolean;
  /** Card PAN */
  pAN?: string | null;
  /**
   * Purchase category code
   * Example:
   * 0 - All Fuels (without VP) and Lubricants
   * 1 - FuelSave only
   * 2 - FuelSave and Lubricants
   * 3 - No Restrictions
   * 4 - VP and FuelSave
   * 5 - Diesel ONLY
   * 6 - Diesel and Lubricants
   * 7 - VP and Lubricants
   * 8 - VP and FuelSave and Lubricants
   */
  purchaseCategoryCode?: string | null;
  /** Purchase category Id */
  purchaseCategoryId?: number | null;
  /**
   * Purchase category name
   * Example:
   * 0 - All Fuels (without VP) and Lubricants
   * 1 - FuelSave only
   * 2 - FuelSave and Lubricants
   * 3 - No Restrictions
   * 4 - VP and FuelSave
   * 5 - Diesel ONLY
   * 6 - Diesel and Lubricants
   * 7 - VP and Lubricants
   * 8 - VP and FuelSave and Lubricants
   */
  purchaseCategoryName?: string | null;
  /** Status Description (Active, Temporarily Blocked, etc.,) */
  statusDescription?: string | null;
  /** Card Status id */
  statusId?: number | null;
  /** Vehicle registration number */
  vRN?: string | null;
  /**
   * Id of the medium type identifier.
   * Example: 1,2,4
   * Full list below:
   * 1 - Fuel Card
   * 2 - Fuel Card with EV
   * 4 - Fuel Card and Key fob Card
   * 5 - Key fob
   * 6 - Virtual Card
   * 7 - NPII Token
   * 8 â€“ Smartpay
   */
  mediumTypeID?: number | null;
  /**
   * Name of the medium type identifier.
   * Example: Fuel Card, Fuel Card with EV, Key fob
   * Full list below:
   * 1 - Fuel Card
   * 2 - Fuel Card with EV
   * 4 - Fuel Card and Key fob Card
   * 5 - Key fob
   * 6 - Virtual Card
   * 7 - NPII Token
   * 8 - Smartpay
   */
  mediumType?: string | null;
}

export const restrictionSearchCardResponseDataItemsSchema: Schema<RestrictionSearchCardResponseDataItems> = object(
  {
    bundleId: ['BundleId', optional(number())],
    restrictions: [
      'Restrictions',
      optional(lazy(() => searchCardResponseRestrictionsSchema)),
    ],
    restrictionCurrencyCode: [
      'RestrictionCurrencyCode',
      optional(nullable(string())),
    ],
    restrictionCurrencySymbol: [
      'RestrictionCurrencySymbol',
      optional(nullable(string())),
    ],
    accountId: ['AccountId', optional(nullable(number()))],
    accountName: ['AccountName', optional(nullable(string()))],
    accountNumber: ['AccountNumber', optional(nullable(string()))],
    accountShortName: ['AccountShortName', optional(nullable(string()))],
    cardId: ['CardId', optional(nullable(number()))],
    cardTypeCode: ['CardTypeCode', optional(nullable(string()))],
    cardTypeId: ['CardTypeId', optional(nullable(number()))],
    cardTypeName: ['CardTypeName', optional(nullable(string()))],
    colCoCurrencyCode: ['ColCoCurrencyCode', optional(nullable(string()))],
    colCoCurrencySymbol: ['ColCoCurrencySymbol', optional(nullable(string()))],
    currencyCode: ['CurrencyCode', optional(nullable(string()))],
    currencySymbol: ['CurrencySymbol', optional(nullable(string()))],
    driverName: ['DriverName', optional(nullable(string()))],
    expiryDate: ['ExpiryDate', optional(nullable(string()))],
    isCRT: ['IsCRT', optional(boolean())],
    isFleet: ['IsFleet', optional(boolean())],
    isInternational: ['IsInternational', optional(boolean())],
    isNational: ['IsNational', optional(boolean())],
    isPartnerSitesIncluded: ['IsPartnerSitesIncluded', optional(boolean())],
    isShellSitesOnly: ['IsShellSitesOnly', optional(boolean())],
    issueDate: ['IssueDate', optional(nullable(string()))],
    issueNumber: ['IssueNumber', optional(nullable(number()))],
    isSuperseded: ['IsSuperseded', optional(boolean())],
    isVirtualCard: ['IsVirtualCard', optional(boolean())],
    pAN: ['PAN', optional(nullable(string()))],
    purchaseCategoryCode: [
      'PurchaseCategoryCode',
      optional(nullable(string())),
    ],
    purchaseCategoryId: ['PurchaseCategoryId', optional(nullable(number()))],
    purchaseCategoryName: [
      'PurchaseCategoryName',
      optional(nullable(string())),
    ],
    statusDescription: ['StatusDescription', optional(nullable(string()))],
    statusId: ['StatusId', optional(nullable(number()))],
    vRN: ['VRN', optional(nullable(string()))],
    mediumTypeID: ['MediumTypeID', optional(nullable(number()))],
    mediumType: ['MediumType', optional(nullable(string()))],
  }
);
