/**
 * Shell Card Management APIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  lazy,
  nullable,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import {
  CreateBundleRequestRestrictions,
  createBundleRequestRestrictionsSchema,
} from './createBundleRequestRestrictions';

export interface CreateBundleRequest {
  /**
   * Collecting Company Id  of the selected payer.
   * Optional if ColCoCode is passed else Mandatory.
   * Example:
   * 1-Philippines
   * 5-UK
   */
  colCoId?: number;
  /**
   * Payer Id of the selected payer.
   * Optional if PayerNumber is passed else Mandatory
   * Example: 123456
   */
  payerId?: number;
  /**
   * Account ID of the customer.
   * Either AccountId or AccountNumber or both must be passed.
   * Example: 123456
   */
  accountId?: number;
  /**
   * Identifier of the bundle in external system.
   * Optional.
   */
  externalBundleId?: string | null;
  /**
   * A bundle description.
   * Optional.
   */
  description: string;
  /**
   * List of Card PANs to be added in the bundle.
   * Mandatory.
   * Example: 7002051006629890645
   * When PAN matches with multiple cards, the restriction will be applied on the latest issued card.
   */
  cards: string[];
  /**
   * Collecting Company Code (Shell Code) of the selected payer.
   * Mandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional for other countries if ColCoID is provided.
   * Example:
   * 86-Philippines
   * 5-UK
   */
  colCoCode?: number | null;
  /**
   * Payer Number (Ex: GB000000123) of the selected payer.
   * Optional if PayerId is passed else Mandatory
   */
  payerNumber?: string;
  /**
   * Account Number of the customer.
   * Either AccountId or AccountNumber or both must be passed.
   * Example: GB000000123
   */
  accountNumber?: string | null;
  /**
   * Restrictions to be applied on the bundle.
   * Mandatory
   */
  restrictions?: CreateBundleRequestRestrictions;
}

export const createBundleRequestSchema: Schema<CreateBundleRequest> = object({
  colCoId: ['ColCoId', optional(number())],
  payerId: ['PayerId', optional(number())],
  accountId: ['AccountId', optional(number())],
  externalBundleId: ['ExternalBundleId', optional(nullable(string()))],
  description: ['Description', string()],
  cards: ['Cards', array(string())],
  colCoCode: ['ColCoCode', optional(nullable(number()))],
  payerNumber: ['PayerNumber', optional(string())],
  accountNumber: ['AccountNumber', optional(nullable(string()))],
  restrictions: [
    'Restrictions',
    optional(lazy(() => createBundleRequestRestrictionsSchema)),
  ],
});
